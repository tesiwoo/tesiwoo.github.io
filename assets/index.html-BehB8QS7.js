import{_ as t,c as a,a as o,o as r}from"./app-DScUAMv8.js";const i="/assets/16379167782635-DDxIBPhl.png",n={};function c(p,e){return r(),a("div",null,e[0]||(e[0]=[o('<p>**UML这三个字母的全称是Unified Modeling Language，直接翻译就是统一建模语言，简单地说就是一种有特殊用途的语言。 **</p><h2 id="对象-类型介绍" tabindex="-1"><a class="header-anchor" href="#对象-类型介绍"><span>对象 类型介绍</span></a></h2><ul><li>接口</li><li>《interface》</li></ul><h2 id="属性表示" tabindex="-1"><a class="header-anchor" href="#属性表示"><span>属性表示</span></a></h2><blockquote><p>-表示private<br> #表示protected ~表示default,也就是包权限<br> _下划线表示static<br> 斜体表示抽象</p></blockquote><h2 id="继承和实现" tabindex="-1"><a class="header-anchor" href="#继承和实现"><span>继承和实现</span></a></h2><blockquote><p>实现是： 类 虚线 空心箭头 指向 接口 继承是： 子类 实线 空心箭头 指向 父类</p></blockquote><h2 id="关系" tabindex="-1"><a class="header-anchor" href="#关系"><span>关系</span></a></h2><blockquote><p>依赖： 虚线 箭头 关联： 实心 箭头 虚线插中间表示依赖关系 聚合： 集合类 空心菱形 实线 箭头 个体 虚线插中间表示聚合关系 组合： 大 实心菱形 实线 箭头 小 虚线插中间表示组合关系</p></blockquote><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p><img src="'+i+'" alt="20200719112544436" width="692" height="764"></p>',11)]))}const d=t(n,[["render",c]]),l=JSON.parse('{"path":"/JAVA/uml/","title":"架构作图","lang":"zh-CN","frontmatter":{"title":"架构作图","createTime":"2025/07/03 17:57:44","permalink":"/JAVA/uml/","tags":["架构设计"],"description":"**UML这三个字母的全称是Unified Modeling Language，直接翻译就是统一建模语言，简单地说就是一种有特殊用途的语言。 ** 对象 类型介绍 接口 《interface》 属性表示 -表示private #表示protected ~表示default,也就是包权限 _下划线表示static 斜体表示抽象 继承和实现 实现是： 类 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构作图\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-06T15:23:13.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://tesiwoo.top/JAVA/uml/"}],["meta",{"property":"og:title","content":"架构作图"}],["meta",{"property":"og:description","content":"**UML这三个字母的全称是Unified Modeling Language，直接翻译就是统一建模语言，简单地说就是一种有特殊用途的语言。 ** 对象 类型介绍 接口 《interface》 属性表示 -表示private #表示protected ~表示default,也就是包权限 _下划线表示static 斜体表示抽象 继承和实现 实现是： 类 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-06T15:23:13.000Z"}],["meta",{"property":"article:tag","content":"架构设计"}],["meta",{"property":"article:modified_time","content":"2025-07-06T15:23:13.000Z"}]]},"readingTime":{"minutes":0.71,"words":214},"git":{"createdTime":1751537663000,"updatedTime":1751815393000,"contributors":[{"name":"yuxiang_chu","username":"","email":"yuxiang_chu@sui.com","commits":2,"avatar":"https://gravatar.com/avatar/4ac399a125e46d0ec8629ca6750dfd462f6865f74d1d4865199efd5f4640012f?d=retro"},{"name":"TeSiWoo","username":"TeSiWoo","email":"1666016977@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/TeSiWoo?v=4","url":"https://github.com/TeSiWoo"}]},"autoDesc":true,"filePathRelative":"notes/JAVA/基础/UML.md","headers":[]}');export{d as comp,l as data};
