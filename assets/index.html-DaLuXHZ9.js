import{_ as i,c as e,a,o as n}from"./app-DScUAMv8.js";const t={};function l(d,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h2 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作"><span>文件操作</span></a></h2><h3 id="将文件添加到版本库中" tabindex="-1"><a class="header-anchor" href="#将文件添加到版本库中"><span>将文件添加到版本库中</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>// 将file添加到暂存区，可以提交多个文件，用空格分割文件名即可</span></span>
<span class="line"><span>git add file_name</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 将工作区所有的文件提交到暂存区</span></span>
<span class="line"><span>git add .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>// 将暂存区中的文件提交到版本库，通常说明要言简意赅的描述出本次改动内容</span></span>
<span class="line"><span>git commit -m &quot;提交说明&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件回退" tabindex="-1"><a class="header-anchor" href="#文件回退"><span>文件回退</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>// 展示从最早到最近的所有提交 后面加参数--pretty=oneline 能使展示的数据更简洁</span></span>
<span class="line"><span>git log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>展示的内容大概就是commit id（版本号） 以及操作操作记录</p></blockquote><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>// 这是回到上一个版本，^^就是回到上上个版本，回到一千前个版本就是一千个^</span></span>
<span class="line"><span>git reset hard HEAD^ </span></span>
<span class="line"><span>// 可以通过版本号进行回滚和“冲向未来”（回滚后后悔了通过这个还原） </span></span>
<span class="line"><span>git reset hard 5d20215955 </span></span>
<span class="line"><span>// 值得一提的是 版本号不需要写全git会自动帮你找，不过多写一点比较稳妥</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 记录了我们每一次的操作</span></span>
<span class="line"><span>git reflog</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>reset 命令的更细节 git reset [--soft] [--mixed] [--hard] [HEAD] -- mixed为默认，可以不用带该参数，用户重置暂存区的文件与上一次提交保持一次，工作区文件内容不变</p></blockquote><h3 id="文件删除" tabindex="-1"><a class="header-anchor" href="#文件删除"><span>文件删除</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git rm file // 删除一个文件 提交后版本库中文件也删除  会丢失工作区中的内容 不会丢弃版本库中的内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="其它" tabindex="-1"><a class="header-anchor" href="#其它"><span>其它</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git status // 查看文件状态 有待提交，待推送等</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>git status 详细：</p><ul><li>Changes to be commit 已经从工作区提交到暂存区了，可以通过git restore --stange fileName 命令将该文件从暂存区中移出到工作区</li><li>Changes not staged for commit 工作区和暂存区中都存在的文件 可以通过git add filaName 将文件加入到暂存区</li></ul></blockquote><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git diff HEAD -- file // 查看工作区和版本库中最新版本 file的区别</span></span>
<span class="line"><span>git checkout -- file // 撤销file在工作区中的修改</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="远程仓库操作" tabindex="-1"><a class="header-anchor" href="#远程仓库操作"><span>远程仓库操作</span></a></h2><p>添加远程仓库的操作自行百度，不难。比如github就是找到地方点点点就ojbk了。以下只介绍有关git的操作</p><blockquote><p>简单介绍有关步骤 创建好远程仓库后，一般会给出很多种地址，包括https和ssh等 需要注意的是，建好远程仓库后你不能直接进行推送和拉取（down zip除外），需要添加自己的公钥和私钥 具体自行百度</p><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>ssh-keygen -t rsa -C &quot;email@xx.xxx&quot;  // 生成私钥和公钥命令</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>生成后将公钥添加到远程仓库管理的key即可</p></blockquote><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>/**</span></span>
<span class="line"><span> * 当创建好了远程仓库后，可以使用本地的版本库与之关联，也可以直接拉取后构建自己的项目</span></span>
<span class="line"><span> * 关联一个远程库时必须给远程库指定一个名字，origin是默认习惯命名；</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>git remote add origin url.git // 在本地仓库目录下执行命令，与对应的url git远程仓库关联</span></span>
<span class="line"><span>git push -u origin master // 第一次推送本地所有内容</span></span>
<span class="line"><span>git push origin master // 每次提交后都需要推送</span></span>
<span class="line"><span></span></span>
<span class="line"><span>git clone url.git // 克隆仓库到本地版本库，有很多协议可用，但是ssh更快哦</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分支操作" tabindex="-1"><a class="header-anchor" href="#分支操作"><span>分支操作</span></a></h2><h3 id="分支查看" tabindex="-1"><a class="header-anchor" href="#分支查看"><span>分支查看</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git branch // 查看本地分支</span></span>
<span class="line"><span>git branch -a // 查看本地和远程所有分支</span></span>
<span class="line"><span>git branch -r // 查看远程分支</span></span>
<span class="line"><span>git remote update -p // 刷新远程分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建分支" tabindex="-1"><a class="header-anchor" href="#创建分支"><span>创建分支</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git branch name // 创建分支</span></span>
<span class="line"><span>git checkout name || git switch name // 切换分支</span></span>
<span class="line"><span>git checkout -b name || git switch -c name // 创建并切换分支 </span></span>
<span class="line"><span></span></span>
<span class="line"><span>git push origin name // 推送本地分支到远程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除分支" tabindex="-1"><a class="header-anchor" href="#删除分支"><span>删除分支</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git branch -d name // 删除分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="合并操作" tabindex="-1"><a class="header-anchor" href="#合并操作"><span>合并操作</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>// 用带参数的git log可以查看分支的合并情况  </span></span>
<span class="line"><span>// ps ： 用git log --graph 查看分支合并图</span></span>
<span class="line"><span>git log --graph --pretty=oneline --abbrev-commit</span></span>
<span class="line"><span></span></span>
<span class="line"><span>git merge branchName // 合并分支， 一般情况想使用的是fast Forward 模式合并，该模式下删除分支后会丢失分支数据</span></span>
<span class="line"><span>git merge --no-ff -m &quot;xxx&quot; branchName // 禁止fast Forward 的模式合并分支，会生成一个新的提交 xxx为新提交的备注内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="标签操作" tabindex="-1"><a class="header-anchor" href="#标签操作"><span>标签操作</span></a></h2><blockquote><p>标签是版本库的快照</p></blockquote><h3 id="查看标签" tabindex="-1"><a class="header-anchor" href="#查看标签"><span>查看标签</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git tag // 查看所有标签</span></span>
<span class="line"><span>git show tagName // 查看对应标签信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="新增标签" tabindex="-1"><a class="header-anchor" href="#新增标签"><span>新增标签</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git tag v1.0 // 打标签</span></span>
<span class="line"><span>// 创建的标签在本地 如果要推送到远程</span></span>
<span class="line"><span>git push origin tagName // 推送标签到远程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除标签" tabindex="-1"><a class="header-anchor" href="#删除标签"><span>删除标签</span></a></h3><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git tag -d v1.0 // 删除标签</span></span>
<span class="line"><span>// 本地标签删除即删除了，如果该标签已推送到远程，删除本地标签后 执行以下命令可删除远程标签</span></span>
<span class="line"><span>git push origin :refs/tag/v1.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他细节操作" tabindex="-1"><a class="header-anchor" href="#其他细节操作"><span>其他细节操作</span></a></h2><div class="language-git line-numbers-mode" data-highlighter="shiki" data-ext="git" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git config --global alias.别名 命令  // 给命令设置别名</span></span>
<span class="line"><span>git commit --amend --no-edit // 给commit重新生成commit id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,38)]))}const h=i(t,[["render",l]]),p=JSON.parse('{"path":"/tool/usegit/","title":"git的常用命令","lang":"zh-CN","frontmatter":{"title":"git的常用命令","createTime":"2025/07/04 10:47:29","permalink":"/tool/usegit/","tag":["git"],"description":"文件操作 将文件添加到版本库中 文件回退 展示的内容大概就是commit id（版本号） 以及操作操作记录 reset 命令的更细节 git reset [--soft] [--mixed] [--hard] [HEAD] -- mixed为默认，可以不用带该参数，用户重置暂存区的文件与上一次提交保持一次，工作区文件内容不变 文件删除 其它 git s...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git的常用命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-14T10:04:16.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://tesiwoo.top/tool/usegit/"}],["meta",{"property":"og:title","content":"git的常用命令"}],["meta",{"property":"og:description","content":"文件操作 将文件添加到版本库中 文件回退 展示的内容大概就是commit id（版本号） 以及操作操作记录 reset 命令的更细节 git reset [--soft] [--mixed] [--hard] [HEAD] -- mixed为默认，可以不用带该参数，用户重置暂存区的文件与上一次提交保持一次，工作区文件内容不变 文件删除 其它 git s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T10:04:16.000Z"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:modified_time","content":"2025-07-14T10:04:16.000Z"}]]},"readingTime":{"minutes":4.27,"words":1281},"git":{"createdTime":1751621200000,"updatedTime":1752487456000,"contributors":[{"name":"yuxiang_chu","username":"","email":"yuxiang_chu@sui.com","commits":2,"avatar":"https://gravatar.com/avatar/4ac399a125e46d0ec8629ca6750dfd462f6865f74d1d4865199efd5f4640012f?d=retro"}]},"autoDesc":true,"filePathRelative":"notes/工具/GIT/002.git的常用命令.md","headers":[]}');export{h as comp,p as data};
