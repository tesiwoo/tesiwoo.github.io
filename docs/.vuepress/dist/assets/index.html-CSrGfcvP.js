import{_ as t,c as o,a as i,o as a}from"./app-lHsGSIJU.js";const n={};function c(d,e){return a(),o("div",null,e[0]||(e[0]=[i('<h2 id="四个工作区域" tabindex="-1"><a class="header-anchor" href="#四个工作区域"><span>四个工作区域</span></a></h2><ul><li>Remote：远程仓库</li><li>Repository：本地仓库</li><li>index：暂存区</li><li>workspace：工作区</li></ul><h2 id="工作区" tabindex="-1"><a class="header-anchor" href="#工作区"><span>工作区</span></a></h2><ul><li><strong>定义</strong>：工作区是你在本地计算机中实际看到并进行文件编辑操作的目录。简单来说，就是你能在文件资源管理器（Windows）或 Finder（Mac）中看到并对文件进行修改、创建、删除等操作的地方。</li><li><strong>示例</strong>：假设你在本地创建了一个名为 <code>my_project</code> 的文件夹用于开发项目，这个 <code>my_project</code> 文件夹就是工作区。你在其中创建了 <code>index.html</code>、<code>style.css</code> 等文件，对它们进行的各种编辑操作都发生在工作区。</li></ul><h2 id="暂存区" tabindex="-1"><a class="header-anchor" href="#暂存区"><span>暂存区</span></a></h2><ul><li><strong>定义</strong>：暂存区是一个中间区域，它像一个缓冲区，用于准备要提交到本地仓库的文件和修改。当你对工作区的文件进行了修改后，需要手动将这些修改添加到暂存区。</li><li><strong>作用</strong>：暂存区的存在让你可以灵活地组织和规划每次提交的内容。你可以选择只将部分修改添加到暂存区，而不是一次性提交所有修改。</li><li><strong>示例</strong>：你在工作区修改了 <code>index.html</code> 和 <code>style.css</code> 两个文件，使用 <code>git add index.html</code> 命令，就将 <code>index.html</code> 文件的修改添加到了暂存区，而 <code>style.css</code> 文件的修改仍留在工作区。</li></ul><h2 id="本地仓库" tabindex="-1"><a class="header-anchor" href="#本地仓库"><span>本地仓库</span></a></h2><ul><li><strong>定义</strong>：本地仓库是存储在你本地计算机上的完整版本库，包含了项目的所有提交历史、分支信息等。它是由 <code>.git</code> 目录组成，当你使用 <code>git init</code> 命令初始化一个项目时，就会在项目根目录下创建这个 <code>.git</code> 目录。</li><li><strong>操作</strong>：当你使用 <code>git commit</code> 命令时，暂存区的内容会被永久保存到本地仓库，形成一个新的提交记录。</li><li><strong>示例</strong>：执行 <code>git commit -m &quot;Update index.html&quot;</code> 后，暂存区中关于 <code>index.html</code> 的修改就会被提交到本地仓库，本地仓库会记录这次提交的相关信息，如提交的哈希值、作者、提交时间和提交信息等。</li></ul><h2 id="远程仓库" tabindex="-1"><a class="header-anchor" href="#远程仓库"><span>远程仓库</span></a></h2><ul><li><strong>定义</strong>：远程仓库是存储在远程服务器上的版本库，常见的远程仓库托管平台有 GitHub、GitLab、Bitbucket 等。远程仓库用于团队成员之间共享代码、协作开发。</li><li><strong>交互</strong>：你可以通过 <code>git push</code> 命令将本地仓库的提交推送到远程仓库，也可以使用 <code>git pull</code> 命令从远程仓库拉取最新的代码并合并到本地仓库。</li><li><strong>示例</strong>：当你完成了一个功能的开发，并且在本地仓库进行了多次提交后，使用 <code>git push origin main</code> 命令将本地 <code>main</code> 分支的提交推送到名为 <code>origin</code> 的远程仓库的 <code>main</code> 分支上。其他团队成员可以使用 <code>git pull</code> 命令获取你推送的最新代码。</li></ul><h2 id="交互流程" tabindex="-1"><a class="header-anchor" href="#交互流程"><span>交互流程</span></a></h2><p>一般的开发流程是：在工作区对文件进行修改，然后使用 <code>git add</code> 命令将修改添加到暂存区，接着使用 <code>git commit</code> 命令将暂存区的内容提交到本地仓库，最后使用 <code>git push</code> 命令将本地仓库的内容推送到远程仓库。反之，当需要获取远程仓库的最新代码时，使用 <code>git pull</code> 命令将远程仓库的内容拉取到本地仓库，再更新到工作区。</p>',12)]))}const s=t(n,[["render",c]]),l=JSON.parse('{"path":"/memo/git/fkmrjk5q/","title":"四个工作区","lang":"zh-CN","frontmatter":{"title":"四个工作区","createTime":"2025/03/17 13:12:45","permalink":"/memo/git/fkmrjk5q/","description":"四个工作区域 Remote：远程仓库 Repository：本地仓库 index：暂存区 workspace：工作区 工作区 定义：工作区是你在本地计算机中实际看到并进行文件编辑操作的目录。简单来说，就是你能在文件资源管理器（Windows）或 Finder（Mac）中看到并对文件进行修改、创建、删除等操作的地方。 示例：假设你在本地创建了一个名为 m...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"四个工作区\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-14T10:49:48.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://zhenghaoyang.cn/memo/git/fkmrjk5q/"}],["meta",{"property":"og:site_name","content":"Hoey"}],["meta",{"property":"og:title","content":"四个工作区"}],["meta",{"property":"og:description","content":"四个工作区域 Remote：远程仓库 Repository：本地仓库 index：暂存区 workspace：工作区 工作区 定义：工作区是你在本地计算机中实际看到并进行文件编辑操作的目录。简单来说，就是你能在文件资源管理器（Windows）或 Finder（Mac）中看到并对文件进行修改、创建、删除等操作的地方。 示例：假设你在本地创建了一个名为 m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-14T10:49:48.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-14T10:49:48.000Z"}]]},"readingTime":{"minutes":2.92,"words":875},"git":{"createdTime":1742188602000,"updatedTime":1747219788000,"contributors":[{"name":"zhenghaoyang24","username":"zhenghaoyang24","email":"zhenghaoyang24@foxmail.com","commits":2,"avatar":"https://avatars.githubusercontent.com/zhenghaoyang24?v=4","url":"https://github.com/zhenghaoyang24"}]},"autoDesc":true,"filePathRelative":"notes/memo/Git/四个工作区.md","headers":[]}');export{s as comp,l as data};
