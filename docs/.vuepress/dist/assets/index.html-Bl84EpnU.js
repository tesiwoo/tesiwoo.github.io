import{_ as i,c as t,a,o as s}from"./app-lHsGSIJU.js";const n={};function r(o,e){return s(),t("div",null,e[0]||(e[0]=[a('<p>为实现一个类似 <code>select</code> 下拉选择框效果，想到用 <code>click</code> 与 <code>blur</code> 事件来处理，但在实践过程中发现 <code>div</code> 正常情况下是无法获得焦点的。</p><p>后来知道了需要添加 <code>tabindex</code> 属性。<br><code>tabindex</code> 全局属性指示其元素是否可以聚焦，以及它是否/在何处参与顺序键盘导航（通常使用Tab键，因此得名）。 下面是<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/tabindex" target="_blank" rel="noopener noreferrer">MDN社区</a>对 <code>tabindex</code> 属性值的说明：</p><blockquote><p>tabindex=负值 (通常是 tabindex=“-1”)，表示元素是可聚焦的，但是不能通过键盘导航来访问到该元素， 用 JS 做页面小组件内部键盘导航的时候非常有用。<br> tabindex=&quot;0&quot; ，表示元素是可聚焦的，并且可以通过键盘导航来聚焦到该元素，它的相对顺序是当前处于的 DOM 结构来决定的。<br> tabindex=正值，表示元素是可聚焦的，并且可以通过键盘导航来访问到该元素；它的相对顺序按照tabindex 的数值递增而滞后获焦。如果多个元素拥有相同的 tabindex，它们的相对顺序按照他们在当前 DOM 中的先后顺序决定。</p></blockquote><p>因此要让 <code>div</code> 支持 <code>focus/blur</code> 事件只需添加 <code>tabindex</code> 属性：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> tabindex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> @click</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Fn</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> @blur</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Fn</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',5)]))}const l=i(n,[["render",r]]),h=JSON.parse('{"path":"/article/23072701/","title":"让div标签支持focus/blur事件","lang":"zh-CN","frontmatter":{"title":"让div标签支持focus/blur事件","createTime":"2023/7/27","tags":["Vue"],"permalink":"/article/23072701/","description":"为实现一个类似 select 下拉选择框效果，想到用 click 与 blur 事件来处理，但在实践过程中发现 div 正常情况下是无法获得焦点的。 后来知道了需要添加 tabindex 属性。 tabindex 全局属性指示其元素是否可以聚焦，以及它是否/在何处参与顺序键盘导航（通常使用Tab键，因此得名）。 下面是MDN社区对 tabindex 属...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"让div标签支持focus/blur事件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-10T14:11:58.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://zhenghaoyang.cn/article/23072701/"}],["meta",{"property":"og:site_name","content":"Hoey"}],["meta",{"property":"og:title","content":"让div标签支持focus/blur事件"}],["meta",{"property":"og:description","content":"为实现一个类似 select 下拉选择框效果，想到用 click 与 blur 事件来处理，但在实践过程中发现 div 正常情况下是无法获得焦点的。 后来知道了需要添加 tabindex 属性。 tabindex 全局属性指示其元素是否可以聚焦，以及它是否/在何处参与顺序键盘导航（通常使用Tab键，因此得名）。 下面是MDN社区对 tabindex 属..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:11:58.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:11:58.000Z"}]]},"readingTime":{"minutes":1.16,"words":349},"git":{"createdTime":1731247918000,"updatedTime":1731247918000,"contributors":[{"name":"zhenghaoyang24","username":"zhenghaoyang24","email":"2463193508@qq.ocm","commits":1,"avatar":"https://avatars.githubusercontent.com/zhenghaoyang24?v=4","url":"https://github.com/zhenghaoyang24"}]},"autoDesc":true,"filePathRelative":"技文/23072701.md","headers":[],"categoryList":[{"id":"59ac2d","sort":10000,"name":"技文"}]}');export{l as comp,h as data};
