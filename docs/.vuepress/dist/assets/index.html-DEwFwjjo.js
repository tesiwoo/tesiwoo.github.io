import{_ as a,c as n,b as i,a as d,d as t,e as l,w as r,r as h,o}from"./app-lHsGSIJU.js";const p={},c={class:"hint-container tip"};function g(k,s){const e=h("RouteLink");return o(),n("div",null,[i("div",c,[s[5]||(s[5]=i("p",{class:"hint-container-title"},"提示",-1)),i("p",null,[s[1]||(s[1]=t("本文已归类进系列文章中，若要了解 ")),s[2]||(s[2]=i("strong",null,[i("code",null,"git")],-1)),s[3]||(s[3]=t(" 的更多信息，请查看 ")),l(e,{to:"/patch/git/introduce/"},{default:r(()=>s[0]||(s[0]=[t("笔记 - 温故知新 - Git")])),_:1,__:[0]}),s[4]||(s[4]=t("。"))])]),s[6]||(s[6]=d(`<p>在使用 <code>git commit -m</code> 时，遵循规范的提交信息格式可以提高代码可读性、协作效率和版本管理质量。</p><p>以下是常见的提交规范建议：</p><h3 id="_1-基础格式" tabindex="-1"><a class="header-anchor" href="#_1-基础格式"><span><strong>1. 基础格式</strong></span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;类型&gt;(&lt;作用域&gt;): &lt;主题&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>类型</strong>：说明提交的类别（必填）</li><li><strong>作用域</strong>：可选，说明影响的范围（如模块、组件）</li><li><strong>主题</strong>：简明扼要的提交描述</li></ul><hr><h3 id="_2-常用提交类型-type" tabindex="-1"><a class="header-anchor" href="#_2-常用提交类型-type"><span><strong>2. 常用提交类型（Type）</strong></span></a></h3><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>feat</code></td><td>新增功能</td></tr><tr><td><code>fix</code></td><td>修复 bug</td></tr><tr><td><code>docs</code></td><td>文档变更（如 README、注释）</td></tr><tr><td><code>style</code></td><td>代码格式调整（不影响逻辑，如空格、分号）</td></tr><tr><td><code>refactor</code></td><td>代码重构（既非新增功能，也非修复 bug）</td></tr><tr><td><code>perf</code></td><td>性能优化</td></tr><tr><td><code>test</code></td><td>测试相关（新增或修改测试用例）</td></tr><tr><td><code>chore</code></td><td>构建/工具/依赖变更（如修改 CI、更新依赖包）</td></tr><tr><td><code>revert</code></td><td>回退某次提交</td></tr></tbody></table><hr><h3 id="_3-作用域-scope" tabindex="-1"><a class="header-anchor" href="#_3-作用域-scope"><span><strong>3. 作用域（Scope）</strong></span></a></h3><ul><li>可选字段，用括号包裹，说明代码影响的范围（如模块、组件）<br> 例如：<code>fix(login): 修复登录按钮样式问题</code></li></ul><hr><h3 id="_4-主题-subject" tabindex="-1"><a class="header-anchor" href="#_4-主题-subject"><span><strong>4. 主题（Subject）</strong></span></a></h3><ul><li><strong>简明扼要</strong>：控制在 50 字符以内</li><li><strong>首字母小写</strong>：无需大写或句号结尾</li><li><strong>使用祈使语气</strong>：如 &quot;add&quot; 而不是 &quot;added&quot; 或 &quot;adds&quot;</li></ul><hr><h3 id="_5-示例" tabindex="-1"><a class="header-anchor" href="#_5-示例"><span><strong>5. 示例</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 标准提交</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">feat(user): 新增用户注册功能</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 带作用域的修复</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">fix(auth): 修复 OAuth 令牌过期问题</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 文档更新</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">docs(api): 补充接口返回示例</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 代码重构</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">refactor(utils): 优化日期格式化函数</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_6-避免的写法" tabindex="-1"><a class="header-anchor" href="#_6-避免的写法"><span><strong>6. 避免的写法</strong></span></a></h3><ul><li>❌ <code>git commit -m &quot;update code&quot;</code> （过于模糊）</li><li>❌ <code>git commit -m &quot;fix bug&quot;</code> （未说明具体问题）</li><li>❌ <code>git commit -m &quot;修改了一些东西&quot;</code> （非英文或未遵循类型规范）</li></ul><hr><h3 id="_7-复杂提交建议" tabindex="-1"><a class="header-anchor" href="#_7-复杂提交建议"><span><strong>7. 复杂提交建议</strong></span></a></h3><p>如果提交需要详细说明，建议省略 <code>-m</code> 直接进入编辑器编写多行信息：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>格式示例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>feat(dashboard): 新增数据统计面板</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 添加用户活跃度图表</span></span>
<span class="line"><span>- 集成实时数据 API</span></span>
<span class="line"><span>- 优化图表响应式布局</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Closes #123</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>遵循规范能让团队协作更高效，也方便通过 <code>git log</code> 快速追踪变更历史。</p>`,28))])}const u=a(p,[["render",g]]),v=JSON.parse('{"path":"/article/24031901/","title":"git commit -m 提交规范建议","lang":"zh-CN","frontmatter":{"title":"git commit -m 提交规范建议","createTime":"2024/3/19","tags":["Git"],"permalink":"/article/24031901/","description":"提示 本文已归类进系列文章中，若要了解 git 的更多信息，请查看 。 在使用 git commit -m 时，遵循规范的提交信息格式可以提高代码可读性、协作效率和版本管理质量。 以下是常见的提交规范建议： 1. 基础格式 类型：说明提交的类别（必填） 作用域：可选，说明影响的范围（如模块、组件） 主题：简明扼要的提交描述 2. 常用提交类型（Type...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git commit -m 提交规范建议\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-13T03:17:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://zhenghaoyang.cn/article/24031901/"}],["meta",{"property":"og:site_name","content":"Hoey"}],["meta",{"property":"og:title","content":"git commit -m 提交规范建议"}],["meta",{"property":"og:description","content":"提示 本文已归类进系列文章中，若要了解 git 的更多信息，请查看 。 在使用 git commit -m 时，遵循规范的提交信息格式可以提高代码可读性、协作效率和版本管理质量。 以下是常见的提交规范建议： 1. 基础格式 类型：说明提交的类别（必填） 作用域：可选，说明影响的范围（如模块、组件） 主题：简明扼要的提交描述 2. 常用提交类型（Type..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-13T03:17:39.000Z"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:modified_time","content":"2025-03-13T03:17:39.000Z"}]]},"readingTime":{"minutes":1.93,"words":578},"git":{"createdTime":1738585045000,"updatedTime":1741835859000,"contributors":[{"name":"zhenghaoyang24","username":"zhenghaoyang24","email":"zhenghaoyang24@foxmail.com","commits":3,"avatar":"https://avatars.githubusercontent.com/zhenghaoyang24?v=4","url":"https://github.com/zhenghaoyang24"}]},"autoDesc":true,"filePathRelative":"学文/24031901.md","headers":[],"categoryList":[{"id":"9c32e1","sort":10001,"name":"学文"}]}');export{u as comp,v as data};
